{"componentChunkName":"component---src-templates-blog-template-js","path":"/javascript/Variables-and-Data-Types/","result":{"data":{"cur":{"id":"8c8ac6d8-5a9f-5e90-a8eb-87c125da4735","html":"<h2 id=\"1자료형\" style=\"position:relative;\"><a href=\"#1%EC%9E%90%EB%A3%8C%ED%98%95\" aria-label=\"1자료형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1)자료형</h2>\n<p>내부적으로는 Primitive(기본형)과 Object(객체형)이 있으며 각각 다음과 같다.\n<br></p>\n<p>Primitive</p>\n<ul>\n<li>Reference 타입</li>\n<li>클래스 뿐만 아니라, 배열과 함수, 사용자 정의 클래스도 모두 Object.</li>\n<li>JSON(Java Script Object Notation)의 기본 구조.</li>\n</ul>\n<br>\n<h2 id=\"2변수-선언\" style=\"position:relative;\"><a href=\"#2%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8\" aria-label=\"2변수 선언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2)변수 선언</h2>\n<ul>\n<li>변수이름은 대소문자를 구별한다.</li>\n<li>여러 변수를 한번에 선언할 수 있음.</li>\n<li>지역변수와 전역변수가 있음.</li>\n<li>기본적으로 소문자로 시작되는 Camel Case 를 사용.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> newMembers<span class=\"token punctuation\">;</span>\nnewMembers <span class=\"token operator\">=</span> <span class=\"token string\">'Jone'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<h3 id=\"var-let-const\" style=\"position:relative;\"><a href=\"#var-let-const\" aria-label=\"var let const permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>var, let, const</h3>\n<blockquote>\n<p>ES6 이전에는 <code class=\"language-text\">var</code>만 존재했으며 function-scoped 로 인해 다른 언들과 다른 문제가 있었음.</p>\n</blockquote>\n<ul>\n<li><code class=\"language-text\">var</code>는 지역변수 개념으로 함수 범위에서 유효함.</li>\n<li><code class=\"language-text\">var</code>를 선언하지 않으면 자동으로 전역변수가 됨.</li>\n<li><code class=\"language-text\">let</code>과 <code class=\"language-text\">const</code>는 ES6 에서 등장한 block-sceoped 변수 선언.</li>\n<li><code class=\"language-text\">let</code>은 값의 재할당이 가능하고 <code class=\"language-text\">const</code> 는 불가능(immutable).</li>\n<li><code class=\"language-text\">const</code>로 선언된 배열이나 객체의 경우 새로운 객체로 재할당하는 것은 안되고, 배열값의 변경/추가, 객체의 필드 변경등은 가능.</li>\n</ul>\n<p>var 를 이용한 변수선언 예시)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> <span class=\"token string\">'foo1'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// foo</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> <span class=\"token string\">'foo2'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// foo2</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// foo2</span></code></pre></div>\n<p>let과 const의 예시)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> foo <span class=\"token operator\">=</span> <span class=\"token string\">'foo1'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bar <span class=\"token operator\">=</span> <span class=\"token string\">'bar1'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// foo1</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> foo <span class=\"token operator\">=</span> <span class=\"token string\">'foo2'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// foo2</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// bar1</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// foo1</span>\nbar <span class=\"token operator\">=</span> <span class=\"token string\">'bar2'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1%EC%9E%90%EB%A3%8C%ED%98%95\">1)자료형</a></p>\n</li>\n<li>\n<p><a href=\"#2%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8\">2)변수 선언</a></p>\n<ul>\n<li><a href=\"#var-let-const\">var, let, const</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#hoisting\">hoisting</a></p>\n<ul>\n<li><a href=\"#string-%EB%B3%80%EC%88%98\">String 변수</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"hoisting\" style=\"position:relative;\"><a href=\"#hoisting\" aria-label=\"hoisting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>hoisting</h2>\n<blockquote>\n<p>호이스팅은 끌어올리기라는 사전전 의미를 가지고 있으며, 자바스크립트에서 모든 변수 선언은 호이스트 되고 함수의 경우 선언형식은 호이스팅 되며 변수에 할당된 형태의 호이스팅 되지 않습니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n  <span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> <span class=\"token string\">'foo11'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// foo11</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>일반적인 언어인 경우 <code class=\"language-text\">foo</code> 변수는 첫번째 출력문에서 선언되기 전 상태로 에러가 발생해야 함.</li>\n<li>자바스크립트는 <code class=\"language-text\">var foo</code> 가 호이스트 되어 변수는 선언되고 값이 할당되지 않은 상태가 됨.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> myVar<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">myVar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> myVar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>위 예제에서는 myVar 라는 변수를 먼저 선언한 상태에서 동일 이름의 함수를 정의.</li>\n<li>함수 선언이 호이스팅 되어 myVar 변수에 할당.</li>\n</ul>\n<blockquote>\n<p>경우에 따라 호이스팅은 사소한 문제를 일으키지 않아 유용할수 있으나 복잡한 코드에서나 오류 가능성이 높으므로 변수 선언시에는 var,let,const 등을 명확히 구분해서 사용하는 것이 좋다.</p>\n</blockquote>\n<h3 id=\"string-변수\" style=\"position:relative;\"><a href=\"#string-%EB%B3%80%EC%88%98\" aria-label=\"string 변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String 변수</h3>\n<p>일반적인 프로그램언어들은 문자열을 표현할때 <code class=\"language-text\">큰따옴표(\"\")</code>를 사용하는데 반해 자바스크립트는 <code class=\"language-text\">\"\",''</code>를 모두 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> string<span class=\"token punctuation\">;</span>\nstring <span class=\"token operator\">=</span> <span class=\"token string\">'java Script'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 혹은 'Java Script'</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"toc\"><pre class=\"language-toc\"><code class=\"language-toc\"></code></pre></div>\n<br>\n<br>","excerpt":"1)자료형 내부적으로는 Primitive(기본형)과 Object(객체형)이 있으며 각각 다음과 같다.\n Primitive Reference 타입 클래스 뿐만 아니라, 배열과 함수, 사용자 정의 클래스도 모두 Object. JSON(Java Script Object Notation)의 기본 구조. 2)변수 선언 변수이름은 대소문자를 구별한다. 여러 변수를 한번에 선언할 수 있음. 지역변수와 전역변수가 있음. 기본적으로 소문자로 시작되는 Camel Case 를 사용. var, let, const ES6 이전에는 만 존재했으며 function-scoped 로 인해 다른 언들과 다른 문제가 있었음. 는 지역변수 개념으로 함수 범위에서 유효함. 를 선언하지 않으면 자동으로 전역변수가 됨. 과 는 ES6 에서 등장한 block-sceoped 변수 선언. 은 값의 재할당이 가능하고  는 불가능(immutable). 로 선언된 배열이나 객체의 경우 새로운 객체로 재할당하는 것은 안되고, 배열값의…","frontmatter":{"date":"May 10, 2022","title":"변수와 자료형이란?","categories":"Javascript","author":"Crong","emoji":"🪴"},"fields":{"slug":"/javascript/Variables-and-Data-Types/"}},"next":{"id":"fe921893-9854-540d-8ec1-2e8ae42d1377","html":"<h2 id=\"소스코드-위치\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C-%EC%9C%84%EC%B9%98\" aria-label=\"소스코드 위치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스코드 위치</h2>\n<p>자바스크립트는 기본적으로 HTML 문서의 <code class=\"language-text\">&lt;head>&lt;/head></code> 사이에 위치 한다. 그러나 그 외 위치에 둘수도 있고 외부파일이나 다른 서버를 통해 참조하는 방식으로도 사용할 수 있다.</p>\n<p>자바스크립트의 소스가 위치하는 몇몇 유형에 대해 살펴 보자.</p>\n<br>\n<h3 id=\"1-내부-자바스크립트\" style=\"position:relative;\"><a href=\"#1-%EB%82%B4%EB%B6%80-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8\" aria-label=\"1 내부 자바스크립트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) 내부 자바스크립트</h3>\n<p>HTML 문서 내부에 자바스크립트 소스코드를 두는 유형 입니다. <code class=\"language-text\">&lt;head>&lt;/head></code> 혹은 <code class=\"language-text\">&lt;body>&lt;/body></code> 에 둘 수 있으며 양쪽에 모두 있어도 상관 없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>'Hello World<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>현재 HTMl 파일의 문서구조(DOM)에 쉽게 접근이 가능.</li>\n<li>현재 화면에 동적인 요소를 부여하는 자바스크립트가 같은 소스파일에 위치하기 때문에 코드 관리와 이해가 쉬움.</li>\n<li>자바스크립트 소스가 복잡해지는 경우 관리가 어려움.</li>\n<li>공통된 기능을 만들기 어렵고 코드의 재활용이 어려움.</li>\n</ul>\n<br>\n<h3 id=\"2-외부-자바스크립트\" style=\"position:relative;\"><a href=\"#2-%EC%99%B8%EB%B6%80-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8\" aria-label=\"2 외부 자바스크립트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) 외부 자바스크립트</h3>\n<p>HTML 문서 외부에 별도의 파일을 생성하고 HTML 에서 불러와 사용하는 방식이다. 이때 자바스크립트의 파일의 위치는 HTML과 동일한 서버 혹은 외부 서버일수도 있다.</p>\n<ul>\n<li>웹의 HTML코드로부터 웹의 동작을 구현하는 자바스크립트 코드를 분리할 수 있음.</li>\n<li>HTML과 자바스크립트 코드의 읽기가 수월해지고 유지 보수가 간편함.</li>\n<li>공통기능의 모듈화와 코드 재활용이 가능해 짐.</li>\n<li>소스가 분리되어 있고 HTML, 자바스크립트 모두 복잡한 경우 소스 이해가 어려울 수 있음</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//example.js</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">FnEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./example.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- 외부 서버의 js파일 참고인 경우 다음과 같이 사용 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://www.cdn.com/myjs/example.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<br>\n<h3 id=\"3-소스파일-위치-결정\" style=\"position:relative;\"><a href=\"#3-%EC%86%8C%EC%8A%A4%ED%8C%8C%EC%9D%BC-%EC%9C%84%EC%B9%98-%EA%B2%B0%EC%A0%95\" aria-label=\"3 소스파일 위치 결정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3) 소스파일 위치 결정</h3>\n<p>브라우저는 HTML의 구조와 CSS 스타일을 렌더링하는 도중 자바스크립트를 만나게 되면 이에 대한 해석과 구현이 완료될때까지 브라우저 렌더링을 멈추게 된다.\n자바스크립트의 삽입 위치에 따라 스크립트 실행순서와 브라우저 렌더링에 영향을 미치기 때문에 다음 사항을 고려해 적절한 위치선정이 필요하다.</p>\n<p><code class=\"language-text\">&lt;head>&lt;/head></code> <br></p>\n<ul>\n<li>브라우저 렌더링에 방해가 될 수 있으며 무거운 스크립트가 실행되는 경우 오랫동안 화면이 보여지지 않을수 있음</li>\n<li>문서를 초기화하거나 설정하는 가벼운 스크립트들을 주로 사용.</li>\n<li>문서의 DOM(Document Object Model) 구조가 필요한 경우 HTML이 모두 로드 된 이후 실행되어야 하므로 <code class=\"language-text\">Window.onload</code>와 같은 로드 이벤트가 추가되어야 함</li>\n</ul>\n<br>\n<p><code class=\"language-text\">&lt;body>&lt;/body></code></p>\n<ul>\n<li>태그내 모든 위치에 둘 수 있음.</li>\n<li>웹페이지 로딩이 완료된 다음 실행하기 위해 일반적으로는 <code class=\"language-text\">&lt;/body></code> 바로 앞에 위치.</li>\n<li>이경우 문서의 DOM 구조가 완료된 시점에 실행되기에 별다른 추가설정이 필요없음.</li>\n</ul>\n<br>\n<p><code class=\"language-text\">내부 자바스크립트 VS 외부 자바스크립트</code></p>\n<ul>\n<li>비교적 간단한 코드로 구성되며 현재 파일에만 적용되는 경우 내부 자바스크립트를 사용.</li>\n<li>공통기능 구현이나 소스가 길어지면 외부 자바스크립트로 관리함.</li>\n<li>공통 라이브러리로 개발된 경우 CDN을 통해 외부 서버로 부터 참조해서 사용함.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C-%EC%9C%84%EC%B9%98\">소스코드 위치</a></p>\n<ul>\n<li><a href=\"#1-%EB%82%B4%EB%B6%80-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8\">1) 내부 자바스크립트</a></li>\n<li><a href=\"#2-%EC%99%B8%EB%B6%80-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8\">2) 외부 자바스크립트</a></li>\n<li><a href=\"#3-%EC%86%8C%EC%8A%A4%ED%8C%8C%EC%9D%BC-%EC%9C%84%EC%B9%98-%EA%B2%B0%EC%A0%95\">3) 소스파일 위치 결정</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<br>\n<br>","frontmatter":{"date":"May 10, 2022","title":"자바스크립트 작성 위치","categories":"Javascript","author":"Crong","emoji":"☘️"},"fields":{"slug":"/javascript/SourceCord-Location/"}},"prev":{"id":"59629073-a8b0-5ef0-86be-051ffa4c1f97","html":"<h2 id=\"3-출력문\" style=\"position:relative;\"><a href=\"#3-%EC%B6%9C%EB%A0%A5%EB%AC%B8\" aria-label=\"3 출력문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3) 출력문</h2>\n<p>자바스크립트는 HTML 문서를 통해 웹브라우저에서 출력되므로 따로 출력문이 존재한다기 보다는 HTML 문서의 구성요소에 동적으로 출력하거나 웹브라우저의 경고창을 이용해 출력하는 형태가 출력문으로 볼 수 있다.</p>\n<h3 id=\"html-문서에-출력\" style=\"position:relative;\"><a href=\"#html-%EB%AC%B8%EC%84%9C%EC%97%90-%EC%B6%9C%EB%A0%A5\" aria-label=\"html 문서에 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML 문서에 출력</h3>\n<blockquote>\n<p>HTML 문서에 출력하는 형태로 페이지가 모두 로딩된 다음에 실행하면 원래 있던 HTML 화면내용은 지워지게 된다.</p>\n</blockquote>\n<p>밑에 코드는 연산결과를 웹브라우저에 출력하는 코드이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>Hello World!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<br>\n<h3 id=\"html-문서의-특정부분에-출력\" style=\"position:relative;\"><a href=\"#html-%EB%AC%B8%EC%84%9C%EC%9D%98-%ED%8A%B9%EC%A0%95%EB%B6%80%EB%B6%84%EC%97%90-%EC%B6%9C%EB%A0%A5\" aria-label=\"html 문서의 특정부분에 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML 문서의 특정부분에 출력</h3>\n<blockquote>\n<p>HTML 문서의 특정요소를 찾아 해당 콘텐츠를 대체해 출력한다. 자바스크립트에서 가장 보편적으로 HTML 문서를 동적으로 핸들링하는 방법이다.</p>\n</blockquote>\n<p>다음 예제는 앞의 예제와 비슷하지만 기존 HTML 소스를 유지하고 부분적으로 변경 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'result'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>Hello World!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>result<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<br>\n<h3 id=\"alert-창을-이용한-출력\" style=\"position:relative;\"><a href=\"#alert-%EC%B0%BD%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%B6%9C%EB%A0%A5\" aria-label=\"alert 창을 이용한 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Alert 창을 이용한 출력</h3>\n<blockquote>\n<p>웹브라우저에서 오픈되는 조그만 경고창(alert)를 이용한 출력이다. 보통 프로그램에서 에러, 경고, 사용자 입력을 위해 많이 사용한다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<br>\n<h3 id=\"브라우저-콘솔창을-이용한-출력\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EC%BD%98%EC%86%94%EC%B0%BD%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%B6%9C%EB%A0%A5\" aria-label=\"브라우저 콘솔창을 이용한 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저 콘솔창을 이용한 출력</h3>\n<blockquote>\n<p>자바스크립트 코드에서 진행상황을 출력하거나 개발을 위해 참고하기 위한 값들을 출력하기 위한 용도로 사용한다.</p>\n</blockquote>\n<p>보통 프로그램언어의 출력문과 가장 비슷한 경우 이다. console.log()를 사용하며 결과 확인은 웹브라우저의 콘솔창에 나타나게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#3-%EC%B6%9C%EB%A0%A5%EB%AC%B8\">3) 출력문</a></p>\n<ul>\n<li><a href=\"#html-%EB%AC%B8%EC%84%9C%EC%97%90-%EC%B6%9C%EB%A0%A5\">HTML 문서에 출력</a></li>\n<li><a href=\"#html-%EB%AC%B8%EC%84%9C%EC%9D%98-%ED%8A%B9%EC%A0%95%EB%B6%80%EB%B6%84%EC%97%90-%EC%B6%9C%EB%A0%A5\">HTML 문서의 특정부분에 출력</a></li>\n<li><a href=\"#alert-%EC%B0%BD%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%B6%9C%EB%A0%A5\">Alert 창을 이용한 출력</a></li>\n<li><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EC%BD%98%EC%86%94%EC%B0%BD%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%B6%9C%EB%A0%A5\">브라우저 콘솔창을 이용한 출력</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<br>\n<br>","frontmatter":{"date":"May 10, 2022","title":"출력문 이란?","categories":"Javascript","author":"Crong","emoji":"🍪"},"fields":{"slug":"/javascript/Output-Statement/"}},"site":{"siteMetadata":{"siteUrl":"https://sinde530.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/javascript/Variables-and-Data-Types/","nextSlug":"/javascript/SourceCord-Location/","prevSlug":"/javascript/Output-Statement/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}