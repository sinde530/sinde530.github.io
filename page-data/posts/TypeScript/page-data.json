{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/TypeScript","result":{"pageContext":{"currentCategory":"TypeScript","categories":["All","Jest","React","TypeScript","WebGL","Javascript","Webpack","블로그","featured","Redux","FireBase","라이프사이클"],"edges":[{"node":{"id":"1b52dc3f-0685-5a71-8a24-e98ffba33487","excerpt":"JEST 페이스북 팀에서 Jasmine 기반으로 만든 테스팅 프레임 워크이다. C-R-A로 만든 리액트 프로젝트에는 자동으로 적용이 되어있다. react-testing-library Enzyme과 달리 모든 테스트를 DOM 위주로 진행하며, 컴포넌트의 props나 state를 조회하는 일은 없다. (컴포넌트를 리팩토링 하게 될 때에는 주로 내부 구조 및 네이밍은 많이 바뀔 수 있어도 실제 작동 방식은 크게 바뀌지 않는다. 이점을 중요시 여겨 컴포넌트의 기능이 똑같이 작동한다면 컴포넌트의 내부 구현 방식이 많이 바뀌어도 테스트가 실패하지 않도록 설계) 즉, react-testing-library는 구현 (Enzyme)에 중점을 둔 테스트보다는 사용자 행동 (react-testing-library)에 중점을 둔다. 2019.09.04일 기준 라이브러리가 바뀌었다. 아래의 명령어로 설치. 의 내용을 아래의 코드로 변경 해당 에 의구심이 있었는데, 보니까 벨로퍼트의 글에 잘 나와있더라. …","fields":{"slug":"/jest/jest/"},"frontmatter":{"categories":"Jest React TypeScript","title":"jest","date":"July 07, 2022"}},"next":{"fields":{"slug":"/WebGL/introduce/"}},"previous":null},{"node":{"id":"cada63ee-137d-5680-b108-dd66ccaa8365","excerpt":"Destructuring 비구조화 할당 위의 객체에서 , , 를 각각 분리해서 사용하고자 할 때 을 사용한다. JavaScript에서의 Destructuring TypeScript에서의 Destructuring 잘못된 방법 단순히 생각해서 이런 식으로 타입을 지정해주면 되지 않을까 싶었음 이렇게 할 경우 name, age, gender를 각각 string,number,string으로 명명하라는 코드가 됨. 쉬운 방법 로 감싸진 전체에 대해서 타입을 지정해야 됨 권장하는 방법 interface로 미리 타입을 정의하고 해당 interface를 타입으로 지정하는 방식이 있다. JavaScript에서의 Destructuring TypeScript에서의 Destructuring 잘못된 방법 쉬운 방법 권장하는 방법","fields":{"slug":"/typescript/destructuring/"},"frontmatter":{"categories":"TypeScript Javascript","title":"TypeScript - 비구조화 할당(Destructuring)","date":"June 20, 2022"}},"next":{"fields":{"slug":"/javascript/webpack/"}},"previous":{"fields":{"slug":"/WebGL/introduce/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}