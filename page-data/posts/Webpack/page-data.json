{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Webpack","result":{"pageContext":{"currentCategory":"Webpack","categories":["All","Go","Jest","React","TypeScript","WebGL","Javascript","Webpack","블로그","featured","Redux","FireBase","라이프사이클"],"edges":[{"node":{"id":"1ad6e798-ce0c-566a-b18e-317f7d90437f","excerpt":"webpack-dev-server 사용하기 프론트에서 js모듈화를 진행하기 위해  과  을 적용하였다. ES6 문법을 브라우저에서도 사용하기 위해서 babel을 적용하고, 그걸 하나로 모듈화를 해주기 위해 webpack을 적용하였다. 그 결과는 html View에서 webpack으로 뭉쳐진 bundle.js하나만 로드해주면 모든 것이 한방에 해결되는 편리함을 맛 볼수 있었다! 에 대한 공부를 대충한 탓이 여태까지 그저 파일간의 의존성같은 부분을 해결해주는 정도로만 생각했지만 아주 많은 기능들이 있었다. 그중 하나가 바로  이다. 이걸 알기 전 까지 webpack을 돌린 후에 html파일을 따로 vscode extention liveserver로 따로 html을 서버에 띄워 테스트를 하였다. webpack-dev-server란? webpack-dev-server는 빠른 실시간 리로드 기능을 갖춘 개발 서버이다 디스크에 저장되지 않는 메모리 컴파일을 사용하기 때문에 속도가 빨라진다. …","fields":{"slug":"/javascript/webpack/"},"frontmatter":{"categories":"Webpack Javascript","title":"webpack-dev-server 사용해보기","date":"June 12, 2022"}},"next":{"fields":{"slug":"/react/Couter/"}},"previous":{"fields":{"slug":"/typescript/destructuring/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}