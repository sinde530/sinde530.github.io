{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Redux","result":{"pageContext":{"currentCategory":"Redux","categories":["All","Jest","React","TypeScript","WebGL","Javascript","Webpack","블로그","featured","Redux","FireBase","라이프사이클"],"edges":[{"node":{"id":"d9445fe9-329e-5f3f-bea8-29b85bfbae3b","excerpt":"Redux Redux로 상태 관리를 하는 이유와 이로 인해 얻어지는 이점은 다음 같다. 상태 관리는 사실 리액트의 관심사가 아니다. App은 상태가 어떻게 처리되는지 모르게 한다. App은 View가 어떻게 그려지는지만 관심을 갖게 한다. App은 상태 관리(store)와 View를 연결만 해준다. App은 상태 관리 로직이 어떻게 구현됐는지는 모른다. 상태 관리 로직 변경의 영향이 View로 전파되지 않는다. Redux 설치 Redux의 3가지 원칙 3가지의 원칙 - 리덕스 공식 문서에서는 리덕스를 사용할 때 따라야 할 3가지 원칙을 제시한다. 전체 상태값을 하나의 객체에 저장한다. 상태값은 불변 객체이다. 상태값은 순수 함수에 의해서만 변경되어야 한다 Action Action 상태값은 오직 액션 객체에 의해서만 변경되어야 한다. type: (string) payload(object): {taskTitle} 액션 객체에는 type,payload 속성으로 구성되는데 type은 어떤…","fields":{"slug":"/react/Redux/"},"frontmatter":{"categories":"React Redux","title":"Redux란?","date":"May 24, 2022"}},"next":{"fields":{"slug":"/react/Flux-Architecture/"}},"previous":{"fields":{"slug":"/github/wakatime stats/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}